# Installing on a fresh Brightbox Ubuntu Trusty cloud server
# Parts of this have been taken from the digitalocean setup guide:
# https://gorails.com/deploy/ubuntu/14.04#ruby

##################################
# PREP SERVER
##################################

# Get things up-to-date:
sudo apt-get update
sudo apt-get upgrade

# Get things secure:
sudo apt-get install unattended-upgrades
sudo dpkg-reconfigure unattended-upgrades

# install dependencies
sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev


##################################
# RUBY, GEMS, AND BUNDLER
##################################

# Add brightbox ruby package repositories
sudo apt-get install software-properties-common
sudo apt-add-repository ppa:brightbox/ruby-ng
sudo apt-get update

# Install brightbox ruby package:
sudo apt-get install ruby2.2

# Install ruby build stuff:
sudo apt-get install ruby2.2-dev

# Configure gems and install bundler:
echo "gem: --no-ri --no-rdoc" > ~/.gemrc
sudo gem install bundler

# We need a JS runtime to compile assets
sudo apt-get install nodejs


##################################
# NGINX AND PASSENGER
##################################

# Install Phusion's PGP key to verify packages
gpg --keyserver keyserver.ubuntu.com --recv-keys 561F9B9CAC40B2F7
gpg --armor --export 561F9B9CAC40B2F7 | sudo apt-key add -

# Add HTTPS support to APT
sudo apt-get install apt-transport-https

# Add the passenger repository
sudo sh -c "echo 'deb https://oss-binaries.phusionpassenger.com/apt/passenger trusty main' >> /etc/apt/sources.list.d/passenger.list"
sudo chown root: /etc/apt/sources.list.d/passenger.list
sudo chmod 600 /etc/apt/sources.list.d/passenger.list
sudo apt-get update

# Install nginx and passenger
sudo apt-get install nginx-full passenger

# Start nginx:
sudo service nginx start # should now be able to hit the IP and see a webpage.

# configure Passenger
sudo nano /etc/nginx/nginx.conf

# Set the following directives in the config where the "Phusion Passenger config" bit is:

  passenger_root /usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini;
  passenger_ruby /usr/bin/ruby;

# Add the following to /etc/nginx/nginx.conf so passsenger can do stuff:
env PATH;


# Edit /etc/nginx/sites-enabled/default:

server {
  listen 80 default_server;
  listen [::]:80 default_server ipv6only=on;

  server_name nwrug.org;
  passenger_enabled on;
  rails_env    production;
  root         /var/www/nwrug/current/public;

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
      root   html;
  }
}


##################################
# CREATE DEPLOY USER
##################################

# also need to create .ssh/authorised_keys with your key so you can connect as deploy user..
sudo adduser deploy


##################################
# PRODUCTION SECRETS!
##################################

# Create a .env file in the /var/www/nwrug/shared folder with the following content:
# Note: might need to run `cap production deploy` once to create the shared folder...
export SECRET_KEY_BASE=...
export NWRUG_DATABASE_PASSWORD=...
export DB_HOST=...

##################################
# READY TO DEPLOY!
##################################

cap production deploy


